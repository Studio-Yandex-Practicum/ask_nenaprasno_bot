from string import Template

from telegram import Update
from telegram.ext import CallbackContext, ContextTypes

from core.send_message import send_message, send_statistics
from service.api_client import APIService


async def weekly_stat_job(context: CallbackContext) -> None:
    """
    Send weekly statistics on the number of requests in the work
    """
    week_statistics = await APIService().get_week_stat()
    template_message = Template(
        "–í—ã –¥–µ–ª–∞–ª–∏ –¥–æ–±—Ä—ã–µ –¥–µ–ª–∞ 7 –¥–Ω–µ–π!\n"
        '–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫ –ø—Ä–æ—à–ª–∞ –≤–∞—à–∞ –Ω–µ–¥–µ–ª—è  –≤ *""–ü—Ä–æ—Å—Ç–æ —Å–ø—Ä–æ—Å–∏—Ç—å""*\n'
        "–ó–∞–∫—Ä—ã—Ç–æ –∑–∞—è–≤–æ–∫ - *$tickets_closed*\n"
        "–í —Ä–∞–±–æ—Ç–µ *$tickets_in_work* –∑–∞—è–≤–æ–∫  –∑–∞ –Ω–µ–¥–µ–ª—é\n\n"
        "–ò—Å—Ç–µ–∫–∞–µ—Ç —Å—Ä–æ–∫ —É *$tickets_expiring –∑–∞—è–≤–æ–∫*\n"
        "–£ *$tickets_expired* –∑–∞—è–≤–æ–∫ —Å—Ä–æ–∫ –∏—Å—Ç–µ–∫\n\n"
        "–û—Ç–∫—Ä—ã—Ç—å [Trello](https://trello.com)\n\n"
        "–ú—ã —Ä–∞–¥—ã —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ :)\n"
        "*–¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!*"
    )
    alias_dict = dict(
        tickets_closed="last_week_user_tickets_closed",
        tickets_in_work="last_week_user_tickets_in_work",
        tickets_expiring="last_week_user_tickets_expiring",
        tickets_expired="last_week_user_tickets_expired",
    )
    await send_statistics(
        context,
        template_message,
        alias_dict,
        week_statistics,
    )


async def monthly_receipt_reminder_job(context: CallbackContext) -> None:
    """
    Send monthly reminder about the receipt formation during payment
    Only for self-employed users
    """


async def monthly_stat_job(context: CallbackContext) -> None:
    """
    Send monthly statistics on the number of successfully
    closed requests.
    Only if the user had requests
    """
    mont_statistics = await APIService().get_month_stat()
    template_message = Template(
        "–≠—Ç–æ –±—ã–ª –æ—Ç–ª–∏—á–Ω—ã–π –º–µ—Å—è—Ü!\n"
        '–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫ –æ–Ω –ø—Ä–æ—à–µ–ª –≤ *""–ü—Ä–æ—Å—Ç–æ —Å–ø—Ä–æ—Å–∏—Ç—å""* üî•\n\n'
        "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫—Ä—ã—Ç—ã—Ö –∑–∞—è–≤–æ–∫ - *$tickets_closed*\n"
        "–†–µ–π—Ç–∏–Ω–≥ - *$rating*\n"
        "–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ - *$ticket_resolve_avg_time*\n\n"
        "–û—Ç–∫—Ä—ã—Ç—å [Trello](https://trello.com)\n\n"
        "–ú—ã —Ä–∞–¥—ã —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ :)\n"
        "*–¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!*"
    )
    alias_dict = dict(
        tickets_closed="user_tickets_closed",
        rating="user_rating",
        ticket_resolve_avg_time="user_ticket_resolve_avg_time",
    )
    await send_statistics(
        context,
        template_message,
        alias_dict,
        mont_statistics,
    )


async def user_monthly_stat_job(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None | str:
    """
    Send monthly statistics at the user's request.
    """
    service = APIService()
    telegram_id = update.callback_query.message.chat.id
    user_statistic = await service.get_user_month_stat(telegram_id=telegram_id)
    template_message = Template(
        "–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü!\n"
        "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫—Ä—ã—Ç—ã—Ö –∑–∞—è–≤–æ–∫ - *$tickets_closed*\n"
        "–†–µ–π—Ç–∏–Ω–≥ - *$rating*\n"
        "–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ - *$ticket_resolve_avg_time*\n\n"
        "–û—Ç–∫—Ä—ã—Ç—å [Trello](https://trello.com)\n\n"
    )
    alias_dict = dict(
        tickets_closed="user_tickets_closed",
        rating="user_rating",
        ticket_resolve_avg_time="user_ticket_resolve_avg_time",
    )
    message = template_message.substitute(
        {key: getattr(user_statistic, attribute) for key, attribute in alias_dict.items()}
    )
    await send_message(context=context, chat_id=telegram_id, text=message)
